var app=angular.module("notes",["ui.router","ngCookies","ngSanitize","ui.bootstrap","ngMessages","ngFlash","msgService","appDirectives","appRoutes","baseCtrl","userCtrl","userService","noteCtrl","noteService"]);app.config(["$httpProvider",function(a){a.interceptors.push("TokenInterceptor")}]),app.config(function(a){a.setTimeout(5e3),a.setShowClose(!0)}),app.run(["$log","$rootScope","$timeout","$window","$state","$location","GetLoggedIn",function(a,b,c,d,e,f,g){b.$on("$stateChangeStart",function(a,c,d,f,h){b.currentState=c.name,b.currentParam=d,b.oldState=f.name,b.oldParam=h,c.access.requiredLogin&&!g.isLogged&&(e.transitionTo("login"),a.preventDefault())})}]),angular.module("appRoutes",[]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(a,b,c){b.otherwise("/404"),b.when("/api_","/"),a.state("home",{url:"/",templateUrl:"./views/home/home.html",controller:"baseController",access:{requiredLogin:!1}}).state("404",{url:"/404",templateUrl:"./views/home/404.html",title:"404 - Page not found",access:{requiredLogin:!1}}).state("tos",{url:"/terms-of-service.html",templateUrl:"./views/home/tos.html",controller:"userController",title:"Terms of service",access:{requiredLogin:!1}}).state("list-note",{url:"/list-note",templateUrl:"./views/note/list_note.html",controller:"listNoteController",access:{requiredLogin:!0}}).state("create-note",{url:"/create-note",templateUrl:"./views/note/create_note.html",controller:"createNoteController",access:{requiredLogin:!0}}).state("detail-note",{url:"/detail-note",templateUrl:"./views/note/detail_note.html",controller:"detailNoteController",params:{id:null},access:{requiredLogin:!0}}).state("login",{url:"/login.html",templateUrl:"./views/user/login.html",controller:"userController",title:"Login",access:{requiredLogin:!1}}).state("register",{url:"/register.html",templateUrl:"./views/user/register.html",controller:"userController",title:"Register",access:{requiredLogin:!1}}).state("list-user",{url:"/list-user",templateUrl:"./views/user/list_user.html",controller:"listUserController",access:{requiredLogin:!0}}),c.html5Mode({enabled:!0,requireBase:!1}),c.hashPrefix("!")}]),angular.module("appDirectives",[]).directive("passwordMatch",function(){return{restrict:"A",scope:!0,require:"ngModel",link:function(a,b,c,d){var e=function(){var b=a.$eval(c.ngModel),d=a.$eval(c.passwordMatch);return b==d};a.$watch(e,function(a){d.$setValidity("unique",a)})}}}),angular.module("baseCtrl",[]).controller("baseController",["$scope","$rootScope","$window","$cookieStore","$state","User","Message","$http","GetLoggedIn",function(a,b,c,d,e,f,g,h,i){a.reFresh=function(){h.get("/loggedin").success(function(a){"0"!==a.id?(d.put("currentUser",a),b.currentUser=d.get("currentUser"),i.isLogged=!0,c.sessionStorage.token=a.token):(b.currentUser=null,i.isLogged=!1)}).error(function(b){a.createAlertError(b)})},a.reFresh(),a.logout=function(){f.logout().success(function(a){b.currentUser=null,i.isLogged=!1,d.remove("currentUser"),delete c.sessionStorage.token,g.createAlertSuccess("Logout successful"),e.go("home")}).error(function(a){g.createAlertSuccess("Logout fail! Unexpected error")})}}]),angular.module("noteCtrl",[]).controller("listNoteController",["$scope","$rootScope","$state","Note","Message",function(a,b,c,d,e){a.notes={},a.listAllNote=function(){b.currentUser?d.list(b.currentUser.id).success(function(b){a.notes=b}).error(function(a){e.createAlertError(a)}):c.go("login")},a.listAllNote(),a.deleteNote=function(b){d.delete(b).success(function(b){e.createAlertSuccess("Note was deleted successful"),a.listAllNote()}).error(function(a){e.createAlertError(a)})}}]).controller("createNoteController",["$scope","$rootScope","$state","Message","Note",function(a,b,c,d,e){a.note={},a.addNote=function(){a.note.user_id=b.currentUser.id,e.add(a.note).success(function(b){a.note=b,d.createAlertSuccess("Note was added successful"),c.go("detail-note",{id:b.id})}).error(function(a){d.createAlertError(a)})}}]).controller("detailNoteController",["$scope","$rootScope","$stateParams","Note","Message",function(a,b,c,d,e){var f=c.id;a.detailNote=function(b){d.detail(b).success(function(b){a.note=b}).error(function(a){e.createAlertError(a)})},a.detailNote(f),a.updateNote=function(){d.put(a.note).success(function(b){e.createAlertSuccess("Note was updated successful"),a.note=b}).error(function(a){e.createAlertError(a)})}}]),angular.module("userCtrl",[]).controller("userController",["$scope","$rootScope","$window","$cookieStore","$state","Message","User","GetLoggedIn",function(a,b,c,d,e,f,g,h){a.userData={},a.login=function(){$.isEmptyObject(a.userData)?f.createAlertError("User name & password must be filled!"):g.login(a.userData).success(function(a){d.put("currentUser",a),b.currentUser=d.get("currentUser"),c.sessionStorage.token=a.token,h.isLogged=!0,f.createAlertSuccess("Login successful"),i()}).error(function(a){f.createAlertError("Login fail!"),h.isLogged=!1,e.go("login")})},a.register=function(){$.isEmptyObject(a.userData)||g.signup(a.userData).success(function(a){f.createAlertSuccess("Signup successful"),e.go("home")}).error(function(a){f.createAlertError("Signup fail!"),e.go("register")})};var i=function(){e.go("home")}}]),angular.module("msgService",[]).factory("Message",["Flash",function(a){return{createAlertSuccess:function(b){a.clear();var c="<strong> Well done!</strong> "+b;return a.create("success",c,5e3)},createAlertError:function(b){a.clear();var c="<strong>Not good !</strong> "+b;return a.create("warning",c,5e3)}}}]),angular.module("noteService",[]).factory("Note",["$http",function(a){return{list:function(b){return a.get("/api/note/list/"+b)},detail:function(b){return a.get("/api/note/detail/"+b)},add:function(b){return a.post("/api/note/add",b)},put:function(b){return a.put("/api/note/update",b)},delete:function(b){return a.delete("/api/note/delete/"+b)}}}]),angular.module("userService",[]).factory("User",["$http",function(a){return{login:function(b){return a.post("/login",b)},signup:function(b){return a.post("/signup",b)},logout:function(){return a.get("/logout")},list:function(){return a.get("/api/user/list")},detail:function(b){return a.get("api/user/detail/"+b)},delete:function(b){return a.delete("/api/user/delete/"+b)}}}]).factory("GetLoggedIn",function(){var a={isLogged:!1};return a}).factory("TokenInterceptor",["$q","$window","$location","GetLoggedIn",function(a,b,c,d){return{request:function(a){return a.headers=a.headers||{},b.sessionStorage.token&&(a.headers.Authorization="Bearer "+b.sessionStorage.token),a},requestError:function(b){return a.reject(b)},response:function(c){return null!==c&&200==c.status&&b.sessionStorage.token&&!d.isLogged&&(d.isLogged=!0),c||a.when(c)},responseError:function(e){return null!==e&&401===e.status&&(b.sessionStorage.token||d.isLogged)&&(delete b.sessionStorage.token,d.isLogged=!1,c.path("/login")),a.reject(e)}}}]);